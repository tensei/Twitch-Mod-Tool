<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:views="clr-namespace:Twitch_Mod_Tool.Views" 
             xmlns:local="clr-namespace:Twitch_Mod_Tool.Views.Models" 
             x:Class="Twitch_Mod_Tool.Views.Models.TwitchMessageView"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" >
    <UserControl.ContextMenu>
        <ContextMenu DataContext="{Binding PlacementTarget, RelativeSource={RelativeSource Self}}">
            <MenuItem Header="Whitelist" 
                        Command="{Binding Tag.WhitelistCommand}"
                        CommandParameter="{Binding DataContext}"/>
        </ContextMenu>
    </UserControl.ContextMenu>
    <materialDesign:ColorZone Padding="10" Margin="3 3 3 0" Mode="Dark" materialDesign:ShadowAssist.ShadowDepth="Depth2">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                    <TextBlock 
                        Text="{Binding Author, Mode=OneTime}" 
                        FontWeight="Bold" 
                        TextWrapping="Wrap"
                    />
                    <TextBlock 
                        Text="{Binding Created, Mode=OneTime}"
                        Margin="10,0" 
                        FontSize="10" 
                        TextWrapping="Wrap"
                        Opacity="0.6" 
                        VerticalAlignment="Center"
                    />
                </StackPanel>
                <TextBlock
                    Grid.Column="1" 
                    Text="{Binding CoughtBy, Mode=OneWay}"
                    Opacity="0.6"
                    Margin="10,0" 
                    FontSize="10" 
                    TextWrapping="Wrap"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"
                />
                <TextBlock
                    Margin="10 0 0 0"
                    Grid.Column="2"
                    Text="{Binding Channel, Mode=OneTime}" 
                    FontSize="12" 
                    FontWeight="Bold" 
                    TextWrapping="Wrap" 
                    HorizontalAlignment="Right"
                />
            </Grid>
            <TextBox 
                TextAlignment="Left" 
                BorderThickness="0" 
                materialDesign:TextFieldAssist.DecorationVisibility="Hidden" 
                IsReadOnly="True"
                Grid.Row="1"
                Opacity=".9"
                Text="{Binding Content, Mode=OneTime}"
                TextWrapping="Wrap" 
            />
            <Separator Grid.Row="2" />
            <Grid Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <WrapPanel Orientation="Horizontal">
                    <Button Style="{DynamicResource MaterialDesignFlatButton}" Content="10min"
                        Command="{Binding DataContext.TenMinTimeoutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:ChatView}}}"
                        CommandParameter="{Binding}"/>
                    <Button Style="{DynamicResource MaterialDesignFlatButton}" Content="1h"
                        Command="{Binding DataContext.OneHourTimeoutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:ChatView}}}"
                        CommandParameter="{Binding}"/>
                    <Button Style="{DynamicResource MaterialDesignFlatButton}" Content="24h"
                        Command="{Binding DataContext.OneDayTimeoutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:ChatView}}}"
                        CommandParameter="{Binding}"/>
                    <Button Style="{DynamicResource MaterialDesignFlatButton}" Content="Perma"
                        Command="{Binding DataContext.PermaCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:ChatView}}}"
                        CommandParameter="{Binding}"/>
                    <Button Style="{DynamicResource MaterialDesignFlatButton}" Content="Unban"
                        Command="{Binding DataContext.UnbanCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:ChatView}}}"
                        CommandParameter="{Binding}"/>
                    <Button Style="{DynamicResource MaterialDesignFlatButton}" Content="Logs"
                        Command="{Binding DataContext.LogsCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:ChatView}}}"
                        CommandParameter="{Binding}"/>
                </WrapPanel>
                <TextBlock Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Text="{Binding CoughtWordsText}" Opacity="0.6" FontSize="12"/>
            </Grid>
        </Grid>
    </materialDesign:ColorZone>
</UserControl>
